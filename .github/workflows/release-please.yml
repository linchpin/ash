on:
  push:
    branches:
      - trunk

permissions:
  contents: write
  pull-requests: write

name: release-please

jobs:
  release-please:
    if: github.event_name != 'pull_request' && github.event.pull_request.merged != true
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
    steps:
      - uses: google-github-actions/release-please-action@v3
        id: release
        with:
          release-type: php
          bump-minor-pre-major: true
          token: ${{ secrets.GH_BOT_TOKEN }}
          versioning-strategy: always-bump-patch

  build:
    needs: release-please
    runs-on: ubuntu-latest
    if: ${{ needs.release-please.outputs.release_created }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get Version From Tag
        id: get_version
        uses: actions-ecosystem/action-get-latest-tag@v1.6.0
        with:
          semver_only: true

      - name: Latest Version
        id: latest_version
        run: |
          TAG=${{ steps.get_version.outputs.tag }}
          echo ::set-output name=VERSION::${TAG#v}

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: /tmp/composer-cache
          key: ${{ runner.os }}-${{ hashFiles('**/composer.lock') }}

      - name: Composer Install
        uses: php-actions/composer@v6
        with:
          working_dir: ./
          dev: no
          php_version: 7.4

      - name: Build Base Assets
        run: |
          npm install && npm run build
          rm -rf node_modules

      - name: Clean Build Files/Folders
        run: |
          chmod +x ./.deployment/cleanup.sh
          sh ./.deployment/cleanup.sh;

      - name: Create Sync Zip
        run: |
          cd ./zip
          zip -r ../linchpin-mmxxiii.zip ./
          cd ../

      - name: Upload files to a GitHub release
        uses: svenstaro/upload-release-action@2.5.0
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: linchpin-mmxxiii.zip
          tag: ${{ steps.get_version.outputs.tag }}
          name: linchpin-mmxxiii.zip
          overwrite: true

      - name: Configure SSH Connection with WP Engine
        run: |
          SSH_PATH="$HOME/.ssh"
          KNOWN_HOSTS_PATH="$SSH_PATH/known_hosts"
          SSH_KEY_PRIVATE_PATH="$SSH_PATH/github_action"
          mkdir -p "$SSH_PATH"
          ssh-keyscan -t rsa "$SSH_HOST" >> "$KNOWN_HOSTS_PATH"
          # Copy Secret Keys to container
          echo "$SSH_KEY" > "$SSH_KEY_PRIVATE_PATH"

          chmod 700 "$SSH_PATH"
          chmod 644 "$KNOWN_HOSTS_PATH"
          chmod 600 "$SSH_KEY_PRIVATE_PATH"
          cat >>~/.ssh/config <<END
          Host wpengine
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile $SSH_KEY_PRIVATE_PATH
            StrictHostKeyChecking no
          END
        env:
          SSH_USER: 'providence'
          SSH_KEY: ${{ secrets.PRIVATE_KEY }}
          SSH_HOST: "providence.ssh.wpengine.net"

      - name: Upload Assets
        id: upload_assets
        run: |
          SSH_PATH="$HOME/.ssh"
          KNOWN_HOSTS_PATH="$SSH_PATH/known_hosts"
          SSH_KEY_PRIVATE_PATH="$SSH_PATH/github_action"
          rsync --rsh="ssh -p 22 -i $SSH_KEY_PRIVATE_PATH -o StrictHostKeyChecking=no" -zrxc --progress "./linchpin-mmxxiii.zip" "providence@providence.ssh.wpengine.net:~/sites/providence/_wpeprivate"

      - name: Automatically install release on linchpin.com
        run: |
          ssh wpengine "cd ~/sites/providence && wp theme install ~/sites/providence/_wpeprivate/linchpin-mmxxiii.zip --force"